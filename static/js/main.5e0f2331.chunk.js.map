{"version":3,"sources":["components/util/TextRow.js","components/util/DividerRow.js","components/combinations/SizeSelector.js","components/combinations/SumSelector.js","components/combinations/Combinations.js","components/combinations/CombinationsContainer.js","components/calculator/Calculator.js","util/useLongPress.js","App.js","index.js"],"names":["TextRow","_ref","text","React","createElement","Row","className","Col","DividerRow","SizeSelector","size","updateSize","options","sizes","Array","from","Set","_toConsumableArray","map","item","props","variant","Fragment","ButtonGroup","style","width","Button","Object","assign","active","disabled","Math","min","apply","onClick","e","x","key","value","max","SumSelector","sum","updateSum","_useState","useState","_useState2","_slicedToArray","sums","setSums","useEffect","filter","includes","s","Combinations","filteredOptions","inactives","updateInactives","count","o","has","length","concat","option","id","prev","next","delete","add","whiteSpace","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","CombinationsContainer","setOptions","_fetchData","_asyncToGenerator","_callee","_context","t0","fetch","json","t1","arguments","fetchData","_useState3","_useState4","setSize","_useState5","_useState6","setSum","_useState7","_useState8","setInactives","useMemo","_objectSpread","Container","Calculator","total","setTotal","calculation","setCalculation","memory","setMemory","mathStack","setMathStack","join","stack","modifier","shift","parseFloat","pressClearEvents","callback","ms","startLongPress","setStartLongPress","timerId","setTimeout","clearTimeout","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","xs","margin","num","tab","LocalStorageName","App","tabIndex","setTabIndex","localStorage","getItem","setItem","Tabs","fill","activeKey","onSelect","k","Tab","eventKey","title","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.5e0f2331.chunk.js","sourcesContent":["import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nfunction TextRow({text}) {\n  return (\n    <Row className=\"text-center mb-2\"><Col>{text}</Col></Row>\n  );\n}\n\nexport default TextRow;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nfunction DividerRow() {\n  return (\n    <Row><Col><hr className=\"mb-1\"/></Col></Row>\n  );\n}\n\nexport default DividerRow;","import React from 'react';\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nimport TextRow from \"../util/TextRow\";\nimport DividerRow from \"../util/DividerRow\";\n\nfunction SizeSelector({size, updateSize, options}) {\n  const sizes = Array.from(new Set([...options].map(item => item['size'])));\n  const props = {\n    variant: \"outline-primary\",\n  }\n  return (\n    <>\n      <TextRow text=\"Size Selector:\" />\n      <Row className=\"text-center\">\n        <Col>\n          <ButtonGroup style={{ width: \"100%\" }}>\n            <Button {...props} active=\"\" disabled={Math.min(...sizes) === size} onClick={(e) => updateSize(size-1)}>{'<'}</Button>\n            {sizes.map(x =>\n              <Button key={x} {...props} active={x === size} value={x} onClick={(e) => updateSize(x)} > {x} </Button>\n            )}\n            <Button  {...props} active=\"\" disabled={Math.max(...sizes) === size} onClick={(e) => updateSize(size+1)}>{'>'}</Button>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <DividerRow/>\n    </>\n  );\n}\n\nexport default SizeSelector;","import React, {useEffect, useState} from 'react';\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport TextRow from \"../util/TextRow\";\nimport DividerRow from \"../util/DividerRow\";\n\nfunction SumSelector({size, sum, updateSum, options}) {\n  const [sums, setSums] = useState([]);\n  useEffect(() => {\n    setSums(Array.from(new Set([...options].filter(item => item.size === size).map(item => item['sum']))));\n  }, [options, size])\n\n  useEffect(() => {\n    // if the previous sum is not in the new list, pick the first one\n    if (!sums.includes(sum)) { updateSum(sums[0]); }\n  }, [sums, sum])\n\n  return (\n    <>\n      <TextRow text=\"Total:\" />\n      <Row>\n        {sums.map(s => (\n          <Col key={s}>\n            <Button style={{ width: \"45px\" }} className=\"mb-2\" variant=\"outline-success\" active={s === sum}\n                    onClick={(e) => updateSum(s)}\n            >\n              {s}\n            </Button>\n          </Col>\n        ))}\n      </Row>\n      <DividerRow/>\n    </>\n  );\n}\n\nexport default SumSelector;","import React from 'react';\n\nimport TextRow from \"../util/TextRow\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Combinations({filteredOptions, inactives, updateInactives}) {\n  const handleClick = id => {\n    if (inactives.has(id)) {\n      updateInactives(prev => {\n        const next = new Set(prev);\n        next.delete(id);\n        return next;\n      })\n    } else {\n      updateInactives(prev => {\n        const next = new Set(prev);\n        next.add(id);\n        return next;\n      });\n    }\n  }\n  const count = filteredOptions.filter(o => !inactives.has(o.value)).length;\n  const text = `Combinations: (${count})`;\n  return (\n    <>\n      <TextRow text={text} />\n      <Row>\n        {filteredOptions.map(option => (\n          <Col key={option.value}>\n            <Button key={option.value} className=\"mb-2\" variant={inactives.has(option.value) ? \"secondary\" : \"success\"} onClick={(e) => handleClick(option.value)}>\n              <span style={{whiteSpace: \"nowrap\"}}>{option.value}</span>\n            </Button>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default Combinations;","import React, {useEffect, useMemo, useState} from 'react';\n\nimport Container from \"react-bootstrap/Container\";\n\nimport SizeSelector from \"./SizeSelector\";\nimport SumSelector from \"./SumSelector\";\nimport Combinations from \"./Combinations\";\n\nfunction CombinationsContainer() {\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      setOptions(await (await fetch('/data/combinations.json')).json());\n    }\n\n    fetchData();\n  }, []);\n\n  const [size, setSize] = useState(3);\n  const [sum, setSum] = useState(10);\n  const [inactives, setInactives] = useState(new Set([]));\n  useEffect(() => {\n    // reset excluded when sum is changing\n    setInactives(new Set());\n  }, [sum])\n\n  const filteredOptions = useMemo(() => {\n    const filtered = Array.from(new Set([...options].filter(item => item.size === size && item.sum === sum)));\n    return filtered.map(item => ({...item, active: true}));\n  }, [options, size, sum, inactives])\n\n  return (\n    <Container>\n      <SizeSelector size={size} updateSize={setSize} options={options} />\n      <SumSelector size={size} sum={sum} updateSum={setSum} options={options} />\n      <Combinations filteredOptions={filteredOptions} inactives={inactives} updateInactives={setInactives} />\n    </Container>\n  );\n}\n\nexport default CombinationsContainer;","import React, {useEffect, useState} from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from \"react-bootstrap/Button\";\n\nimport useLongPress from './../../util/useLongPress';\n\nimport './Calculator.css';\n\nfunction Calculator() {\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\n  const operators = ['+', '-'];\n\n  const [total, setTotal] = useState(0);\n  const [calculation, setCalculation] = useState('');\n  const [memory, setMemory] = useState([]);\n  const [mathStack, setMathStack] = useState([]);\n  useEffect(() => {\n    const total = (stack) => {\n      let sum = 0;\n      let modifier = '+';\n      while (stack.length) {\n        const s = stack.shift();\n        if (['+','-'].includes(s)) { modifier = s; continue; }\n        if (modifier === '+') {\n          sum += parseFloat(s);\n        } else {\n          sum -= parseFloat(s);\n        }\n      }\n      return sum > 999 ? '∞' : sum;\n    };\n\n    if (mathStack.length || memory.length) {\n      setCalculation(mathStack.join('') + '' + memory.join(''));\n      setTotal(total([...mathStack, '0'+memory.join('')]));\n    } else {\n      setCalculation('');\n      setTotal(0);\n    }\n  }, [mathStack, memory])\n\n  const onNumberPress = num => {\n    setMemory(memory => [...memory, num]);\n  }\n  const onPlusMinusPress = key => {\n    if (memory.length) {\n      setMathStack(stack => [...stack, memory.join('')]);\n      setMemory([]);\n    } else if (['+','-'].includes(mathStack[mathStack.length-1])) {\n      // if last item is an operator, drop the last item\n      setMathStack(stack => { stack.pop(); return [...stack]; });\n    }\n    setMathStack(stack => [...stack, key]);\n  }\n  const onClearPress = () => {\n    if (memory.length) {\n      setMemory([]);\n    } else if (mathStack.length) {\n      setMathStack(stack => {\n        stack.pop();\n        if (stack.length) {\n          setMemory([...stack.pop()]);\n        }\n        return [...stack];\n      });\n    }\n  }\n  const onLongClearPress = () => {\n    setMemory([]);\n    setMathStack([]);\n  }\n  const pressClearEvents = {\n    ...useLongPress(onLongClearPress, 1000),\n    onClick: onClearPress\n  }\n\n  return (\n    <Container>\n      <Row className=\"text-center mb-4\">\n        <Col xs={6} style={{ margin: \"auto\"}}><div className=\"calculation\">{calculation}</div></Col>\n        <Col xs={2} style={{ margin: \"auto\"}}><div className=\"total\">{total}</div></Col>\n        <Col xs={4}>\n          <Button variant=\"danger\" size=\"lg\" {...pressClearEvents}>C</Button>\n        </Col>\n      </Row>\n      <Row className=\"text-center\">\n        {numbers.map(i => (<Col key={i} xs={4}><Button className=\"mb-2\" size=\"lg\" onClick={(e) => onNumberPress(i)}>{i}</Button></Col>))}\n        {operators.map(i => (<Col key={i} xs={4}><Button variant=\"warning\" className=\"mb-2\" size=\"lg\" onClick={(e) => onPlusMinusPress(i)}>{i}</Button></Col>))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Calculator;","import { useState, useEffect } from 'react';\n\nexport default function useLongPress(callback = () => {}, ms = 300) {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId;\n    if (startLongPress) {\n      timerId = setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  return {\n    onMouseDown: () => setStartLongPress(true),\n    onMouseUp: () => setStartLongPress(false),\n    onMouseLeave: () => setStartLongPress(false),\n    onTouchStart: () => setStartLongPress(true),\n    onTouchEnd: () => setStartLongPress(false),\n  };\n}","import React, {useEffect, useState} from 'react';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nimport CombinationsContainer from \"./components/combinations/CombinationsContainer\";\nimport Calculator from \"./components/calculator/Calculator\";\n\nimport \"./App.css\";\n\nconst tab = {\n  LocalStorageName: 'tab-index',\n  Combinations: \"Combinations\",\n  Calculator: \"Calculator\",\n};\n\nfunction App() {\n  const [tabIndex, setTabIndex] = useState(\"\");\n  useEffect(() => {\n    let item = localStorage.getItem(tab.LocalStorageName);\n    if (!item) { item = tab.Combinations; }\n    setTabIndex(item);\n  }, []);\n  useEffect(() => { localStorage.setItem(tab.LocalStorageName, tabIndex); }, [tabIndex]);\n\n  return (\n    <Tabs fill id=\"tabs\" activeKey={tabIndex} onSelect={(k) => setTabIndex(k)} className=\"mb-3 mt-2\">\n      <Tab eventKey={tab.Combinations} title={tab.Combinations}>\n        <CombinationsContainer/>\n      </Tab>\n      <Tab eventKey={tab.Calculator} title={tab.Calculator}>\n        <Calculator/>\n      </Tab>\n    </Tabs>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from \"./App\";\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);"],"sourceRoot":""}