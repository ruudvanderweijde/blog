{"version":3,"sources":["components/util/TextRow.js","components/util/DividerRow.js","components/combinations/SizeSelector.js","components/combinations/SumSelector.js","components/combinations/Combinations.js","components/combinations/CombinationsContainer.js","components/calculator/Calculator.js","App.js","index.js"],"names":["TextRow","_ref","text","React","createElement","Row","className","Col","DividerRow","SizeSelector","size","updateSize","options","sizes","Array","from","Set","_toConsumableArray","map","item","cols","x","Button","key","variant","active","value","onClick","e","Fragment","ButtonGroup","disabled","Math","min","apply","max","SumSelector","sum","updateSum","_useState","useState","_useState2","_slicedToArray","sums","setSums","useEffect","filter","includes","s","style","width","Combinations","filteredOptions","inactives","updateInactives","count","o","has","length","concat","option","id","prev","next","delete","add","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","CombinationsContainer","setOptions","_fetchData","_asyncToGenerator","_callee","_context","t0","fetch","json","t1","arguments","fetchData","_useState3","_useState4","setSize","_useState5","_useState6","setSum","_useState7","_useState8","setInactives","useMemo","_objectSpread","Container","Calculator","setResult","memory","setMemory","mathStack","setMathStack","join","stack","modifier","shift","parseFloat","total","handleClick","console","log","xs","height","App","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","title","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.61e7b717.chunk.js","sourcesContent":["import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nfunction TextRow({text}) {\n  return (\n    <Row className=\"text-center mb-2\"><Col>{text}</Col></Row>\n  );\n}\n\nexport default TextRow;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nfunction DividerRow() {\n  return (\n    <Row><Col><hr className=\"mb-1\"/></Col></Row>\n  );\n}\n\nexport default DividerRow;","import React from 'react';\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nimport TextRow from \"../util/TextRow\";\nimport DividerRow from \"../util/DividerRow\";\n\nfunction SizeSelector({size, updateSize, options}) {\n  const sizes = Array.from(new Set([...options].map(item => item['size'])));\n\n  const cols = sizes.map(x =>\n    <Button\n      key={x}\n      variant=\"outline-primary\"\n      active={x === size}\n      value={x}\n      onClick={(e) => updateSize(x)}\n    >\n      {x}\n    </Button>\n  );\n\n  return (\n    <>\n      <TextRow text=\"Size Selector:\" />\n      <Row className=\"text-center\">\n        <Col>\n          <ButtonGroup>\n            <Button variant=\"outline-primary\" disabled={Math.min(...sizes) === size} onClick={(e) => updateSize(size-1)}>{'<'}</Button>\n            {cols}\n            <Button variant=\"outline-primary\" disabled={Math.max(...sizes) === size} onClick={(e) => updateSize(size+1)}>{'>'}</Button>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <DividerRow/>\n    </>\n  );\n}\n\nexport default SizeSelector;","import React, {useEffect, useState} from 'react';\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport TextRow from \"../util/TextRow\";\nimport DividerRow from \"../util/DividerRow\";\n\nfunction SumSelector({size, sum, updateSum, options}) {\n  const [sums, setSums] = useState([]);\n  useEffect(() => {\n    setSums(Array.from(new Set([...options].filter(item => item.size === size).map(item => item['sum']))));\n  }, [options, size])\n\n  useEffect(() => {\n    // if the previous sum is not in the new list, pick the first one\n    if (!sums.includes(sum)) { updateSum(sums[0]); }\n  }, [sums, sum])\n\n  return (\n    <>\n      <TextRow text=\"Total:\" />\n      <Row>\n        {sums.map(s => (\n          <Col key={s}>\n            <Button style={{ width: \"45px\" }} className=\"mb-2\" variant=\"outline-success\" active={s === sum}\n                    onClick={(e) => updateSum(s)}\n            >\n              {s}\n            </Button>\n          </Col>\n        ))}\n      </Row>\n      <DividerRow/>\n    </>\n  );\n}\n\nexport default SumSelector;","import React from 'react';\n\nimport TextRow from \"../util/TextRow\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport DividerRow from \"../util/DividerRow\";\n\nfunction Combinations({filteredOptions, inactives, updateInactives}) {\n  const handleClick = id => {\n    if (inactives.has(id)) {\n      updateInactives(prev => {\n        const next = new Set(prev);\n        next.delete(id);\n        return next;\n      })\n    } else {\n      updateInactives(prev => {\n        const next = new Set(prev);\n        next.add(id);\n        return next;\n      });\n    }\n  }\n  const count = filteredOptions.filter(o => !inactives.has(o.value)).length;\n  const text = `Combinations: (${count})`;\n  return (\n    <>\n      <TextRow text={text} />\n      <Row>\n        {filteredOptions.map(option => (\n          <Col key={option.value}>\n            <Button key={option.value} className=\"mb-2\" variant={inactives.has(option.value) ? \"secondary\" : \"success\"} onClick={(e) => handleClick(option.value)}>\n              {option.value}\n            </Button>\n          </Col>\n        ))}\n      </Row>\n      <DividerRow/>\n    </>\n  );\n}\n\nexport default Combinations;","import React, {useEffect, useMemo, useState} from 'react';\n\nimport Container from \"react-bootstrap/Container\";\n\nimport SizeSelector from \"./SizeSelector\";\nimport SumSelector from \"./SumSelector\";\nimport Combinations from \"./Combinations\";\n\nfunction CombinationsContainer() {\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      setOptions(await (await fetch('/data/combinations.json')).json());\n    }\n\n    fetchData();\n  }, []);\n\n  const [size, setSize] = useState(3);\n  const [sum, setSum] = useState(10);\n  const [inactives, setInactives] = useState(new Set([]));\n  useEffect(() => {\n    // reset excluded when sum is changing\n    setInactives(new Set());\n  }, [sum])\n\n  const filteredOptions = useMemo(() => {\n    const filtered = Array.from(new Set([...options].filter(item => item.size === size && item.sum === sum)));\n    return filtered.map(item => ({...item, active: true}));\n  }, [options, size, sum, inactives])\n\n  return (\n    <Container>\n      <SizeSelector size={size} updateSize={setSize} options={options} />\n      <SumSelector size={size} sum={sum} updateSum={setSum} options={options} />\n      <Combinations filteredOptions={filteredOptions} inactives={inactives} updateInactives={setInactives} />\n    </Container>\n  );\n}\n\nexport default CombinationsContainer;","import React, {useEffect, useState} from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from \"react-bootstrap/Button\";\nimport DividerRow from \"../util/DividerRow\";\n\nfunction Calculator() {\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\n  const operators = ['+', '-', 'C'];\n\n  const [result, setResult] = useState('...');\n  const [memory, setMemory] = useState([]);\n  const [mathStack, setMathStack] = useState([]);\n  useEffect(() => {\n    const total = (stack) => {\n      let sum = 0;\n      let modifier = '+';\n      while (stack.length) {\n        const s = stack.shift();\n        if (['+','-'].includes(s)) { modifier = s; continue; }\n        if (modifier === '+') {\n          sum += parseFloat(s);\n        } else {\n          sum -= parseFloat(s);\n        }\n      }\n      return sum;\n    };\n\n    if (mathStack.length || memory.length) {\n      setResult(mathStack.join(' ') + ' ' + memory.join('') + ' = ' + total([...mathStack, '0'+memory.join('')]));\n    } else {\n      setResult('...');\n    }\n  }, [mathStack, memory])\n\n  const handleClick = id => {\n    console.log('handle id:', id);\n    if (['C'].includes(id)) {\n      if (memory.length) {\n        setMemory([]);\n      } else if (mathStack.length) {\n        setMathStack(stack => { stack.pop(); return [...stack]; });\n      }\n    } else if (['+', '-'].includes(id)) {\n      if (memory.length) {\n        setMathStack(stack => [...stack, memory.join('')]);\n        setMemory([]);\n      }\n      setMathStack(stack => [...stack, id]);\n    } else {\n      setMemory(memory => [...memory, id]);\n    }\n  }\n\n  return (\n    <Container>\n      <Row className=\"text-center mb-2\"><Col>{result}</Col></Row>\n      <DividerRow/>\n      <Row className=\"text-center\">\n        {operators.map(i => (<Col key={i} xs={4}><Button variant=\"warning\" style={{width: \"100px\", height: \"100px\"}} className=\"mb-2\" size=\"lg\" onClick={(e) => handleClick(i)}>{i}</Button></Col>))}\n      </Row>\n      <Row className=\"text-center\">\n        {numbers.map(i => (<Col key={i} xs={4}><Button style={{width: \"100px\", height: \"100px\"}} className=\"mb-2\" size=\"lg\" onClick={(e) => handleClick(i)}>{i}</Button></Col>))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Calculator;","import React, {useState} from 'react';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nimport CombinationsContainer from \"./components/combinations/CombinationsContainer\";\nimport Calculator from \"./components/calculator/Calculator\";\n\nfunction App() {\n  const [key, setKey] = useState('combinations');\n\n  return (\n    <Tabs id=\"tabs\" activeKey={key} onSelect={(k) => setKey(k)} className=\"mb-3\">\n      <Tab eventKey=\"combinations\" title=\"Combinations\">\n        <CombinationsContainer/>\n      </Tab>\n      <Tab eventKey=\"calculator\" title=\"Calculator\">\n        <Calculator/>\n      </Tab>\n    </Tabs>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from \"./App\";\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);"],"sourceRoot":""}