{"version":3,"sources":["App.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Divider","React","createElement","Row","Col","className","Text","_ref","text","SizeSelector","_ref2","size","updateSize","options","sizes","Array","from","Set","_toConsumableArray","map","item","cols","x","Button","variant","active","onClick","e","Fragment","ButtonGroup","disabled","Math","min","apply","max","SumSelector","_ref3","sum","updateSum","_useState","useState","_useState2","_slicedToArray","sums","setSums","useEffect","filter","includes","s","Combinations","_ref4","filteredOptions","inactives","updateInactives","count","o","has","concat","option","id","delete","add","Main","_useState3","_useState4","setOptions","_fetchData","_asyncToGenerator","_callee","_context","t0","fetch","json","t1","arguments","fetchData","_useState5","_useState6","setSize","_useState7","_useState8","setSum","_useState9","_useState10","setInactives","useMemo","_objectSpread","Container","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3ba186c.chunk.js","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\n\nfunction Divider() {\n  return (\n    <Row><Col><hr className=\"mb-1\"/></Col></Row>\n  );\n}\n\nfunction Text({text}) {\n  return (\n    <Row className=\"text-center mb-2\"><Col>{text}</Col></Row>\n  );\n}\n\nfunction SizeSelector({size, updateSize, options}) {\n  const sizes = Array.from(new Set([...options].map(item => item['size'])));\n\n  const cols = sizes.map(x =>\n    <Button\n      key={x}\n      variant=\"outline-primary\"\n      active={x === size}\n      value={x}\n      onClick={(e) => updateSize(x)}\n    >\n      {x}\n    </Button>\n  );\n\n  return (\n    <>\n      <Text text=\"Size Selector:\" />\n      <Row className=\"text-center\">\n        <Col>\n          <ButtonGroup>\n            <Button variant=\"outline-primary\" disabled={Math.min(...sizes) === size} onClick={(e) => updateSize(size-1)}>{'<'}</Button>\n            {cols}\n            <Button variant=\"outline-primary\" disabled={Math.max(...sizes) === size} onClick={(e) => updateSize(size+1)}>{'>'}</Button>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Divider/>\n    </>\n  );\n}\n\nfunction SumSelector({size, sum, updateSum, options}) {\n  const [sums, setSums] = useState([]);\n  useEffect(() => {\n    setSums(Array.from(new Set([...options].filter(item => item.size === size).map(item => item['sum']))));\n  }, [options, size])\n\n  useEffect(() => {\n    // if the previous sum is not in the new list, pick the first one\n    if (!sums.includes(sum)) { updateSum(sums[0]); }\n  }, [sums, sum])\n\n  return (\n    <>\n      <Text text=\"Total:\" />\n      <Row>\n        {sums.map(s => (\n          <Col key={s}>\n            <Button className=\"mb-2\" variant=\"outline-success\" active={s === sum}\n              onClick={(e) => updateSum(s)}\n            >\n              {s}\n            </Button>\n          </Col>\n        ))}\n      </Row>\n      <Divider/>\n    </>\n  );\n}\n\nfunction Combinations({filteredOptions, inactives, updateInactives}) {\n  const handleClick = id => {\n    if (inactives.has(id)) {\n      updateInactives(prev => {\n        const next = new Set(prev);\n        next.delete(id);\n        return next;\n      })\n    } else {\n      updateInactives(prev => {\n        const next = new Set(prev);\n        next.add(id);\n        return next;\n      });\n    }\n  }\n  const count = filteredOptions.filter(o => !inactives.has(o.value)).length;\n  const text = `Combinations: (${count})`;\n  return (\n    <>\n      <Text text={text} />\n      <Row>\n        {filteredOptions.map(option => (\n          <Col key={option.value}>\n            <Button key={option.value} className=\"mb-2\" variant={inactives.has(option.value) ? \"secondary\" : \"success\"} onClick={(e) => handleClick(option.value)}>\n              {option.value}\n            </Button>\n          </Col>\n        ))}\n      </Row>\n      <Divider/>\n    </>\n  );\n}\n\nfunction Main() {\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      setOptions(await (await fetch('/data/combinations.json')).json());\n    }\n\n    fetchData();\n  }, []);\n\n  const [size, setSize] = useState(3);\n  const [sum, setSum] = useState(10);\n  const [inactives, setInactives] = useState(new Set([]));\n  useEffect(() => {\n    // reset excluded when sum is changing\n    setInactives(new Set());\n  }, [sum])\n\n  const filteredOptions = useMemo(() => {\n    const filtered = Array.from(new Set([...options].filter(item => item.size === size && item.sum === sum)));\n    return filtered.map(item => ({...item, active: true}));\n  }, [options, size, sum, inactives])\n\n  return (\n    <Container>\n      <SizeSelector size={size} updateSize={setSize} options={options} />\n      <SumSelector size={size} sum={sum} updateSum={setSum} options={options} />\n      <Combinations filteredOptions={filteredOptions} inactives={inactives} updateInactives={setInactives} />\n    </Container>\n  );\n}\n\nexport default function App() {\n  return <Main />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}